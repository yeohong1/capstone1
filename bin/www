
// //var app = require('../app');
// var debug = require('debug')('myapp:server');
// var http = require('http');

// const express = require("express");
// const app = express()

// var port = normalizePort(process.env.PORT || '3000');
// app.use(express.static('public'));
// app.set("view engine", "ejs");
// app.use("/static", express.static("static"));

// app.get("/mypage", (req, res) => {
//   res.render("mypage.ejs");
// })

// app.get("/register", (req, res) => {
//   res.render("register.ejs");
// })

// var server = http.createServer(app);



// app.listen(port);
// server.on('error', onError);
// server.on('listening', onListening);



// function normalizePort(val) {
//   var port = parseInt(val, 10);

//   if (isNaN(port)) {
//     // named pipe
//     return val;
//   }

//   if (port >= 0) {
//     // port number
//     return port;
//   }

//   return false;
// }



// function onError(error) {
//   if (error.syscall !== 'listen') {
//     throw error;
//   }

//   var bind = typeof port === 'string'
//     ? 'Pipe ' + port
//     : 'Port ' + port;

//   // handle specific listen errors with friendly messages
//   switch (error.code) {
//     case 'EACCES':
//       console.error(bind + ' requires elevated privileges');
//       process.exit(1);
//       break;
//     case 'EADDRINUSE':
//       console.error(bind + ' is already in use');
//       process.exit(1);
//       break;
//     default:
//       throw error;
//   }
// }


// function onListening() {
//   var addr = server.address();
//   var bind = typeof addr === 'string'
//     ? 'pipe ' + addr
//     : 'port ' + addr.port;
//   debug('Listening on ' + bind);
// }
